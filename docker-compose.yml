# docker compose qui run la base de donnee PostgreSQL

version: '3.8'
services:
  postgres: #rajouter un health check
    image: postgres:latest       # image existante provenant de dockerHub
    container_name: postgres
    restart: always
    env_file:
      - ./srcs/back-end/prisma/.env
    volumes:
      - postgres:/var/lib/postgresql/data     # Volumes pour permettre de garder les data dans notre host systeme
    networks:
      - backend 
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d transcendance -U myuser"]
      timeout: 20s
      retries: 10
  nest:
    container_name: nestjs
    env_file:
      - .env
    build:
      target: development
      context: ./srcs/back-end      # Emplacement de Dockerfile
    restart: always
    depends_on: #voir le service healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./srcs/back-end:/usr/src/app
    networks:
      - backend       # Connexion au même réseau que la base de donnée
    ports:
      - '3000:3000'
      - '5555:5555'   # npx prisma studio
  vite:
    build:
      context: ./srcs/front-end
      dockerfile: Dockerfile
    container_name: vue
    restart: on-failure
    volumes:
      - ./srcs/front-end:/usr/src/app/
    networks:
      - backend

volumes:
  postgres:

networks:
  backend:
