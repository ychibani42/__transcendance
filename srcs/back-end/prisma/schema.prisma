// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// 1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
// 2. Set the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.
// 3. Run prisma db pull to turn your database schema into a Prisma schema.
// 4. Run prisma generate to generate the Prisma Client. You can then start querying your database.

generator client {
  provider = "prisma-client-js" //	indique a prisma quel type de requete il va envoyer a la base de donnee pour communiquer avec la base de donnees, en javascript comme on utilise un application en javascript
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")	// on dit qu'on utilise prisma et que pour y acceder on utilise l'url du .env
}

model User {
  id        Int              @id @unique @default(autoincrement())
  name      String           @unique
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  hash_passwd String
  channels Channel[] @relation("chan/user")
}


model Channel {
  is_private Boolean
  userId    Int
  id   Int     @id @unique @default(autoincrement())
  user User[] @relation("chan/user")
  messages  Message[]
}

model Message {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())
  text      String
  name      String
  authorId  Int
  author    Channel     @relation(fields: [authorId], references: [id])
}
